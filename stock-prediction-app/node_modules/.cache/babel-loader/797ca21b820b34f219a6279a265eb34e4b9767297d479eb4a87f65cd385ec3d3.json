{"ast":null,"code":"var _jsxFileName = \"/Users/sumedh/Desktop/bull/stock-prediction-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockPredictionApp() {\n  _s();\n  const [selectedStock, setSelectedStock] = useState('TCS');\n  const [closingPrice, setClosingPrice] = useState(null);\n  const [predictedPrice, setPredictedPrice] = useState(null);\n  const [result, setResult] = useState('');\n  const stocks = {\n    TCS: 'https://tradingview.com/embed/TCS_chart',\n    TATAMOTORS: 'https://tradingview.com/embed/TATAMOTORS_chart',\n    SUNPHARMA: 'https://tradingview.com/embed/SUNPHARMA_chart',\n    RELIANCE: 'https://tradingview.com/embed/RELIANCE_chart',\n    ITC: 'https://tradingview.com/embed/ITC_chart',\n    INFY: 'https://tradingview.com/embed/INFY_chart',\n    ICICIBANK: 'https://tradingview.com/embed/ICICIBANK_chart',\n    HINDUNILVR: 'https://tradingview.com/embed/HINDUNILVR_chart',\n    HDFCBANK: 'https://tradingview.com/embed/HDFCBANK_chart',\n    ADANIPOWER: 'https://tradingview.com/embed/ADANIPOWER_chart'\n  };\n  useEffect(() => {\n    // Simulate fetching the stock data (you'll fill these values)\n    const closing_price = 0; // Fill with actual data\n    const predicted_price = 0; // Fill with actual data\n    setClosingPrice(closing_price);\n    setPredictedPrice(predicted_price);\n    if (predicted_price > closing_price) {\n      setResult('The stock will be Bullish!');\n    } else {\n      setResult('The stock will be Bearish!');\n    }\n\n    // Update the chart based on selected stock\n    document.getElementById('stockChart').src = stocks[selectedStock];\n  }, [selectedStock]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Stock Prediction for \", selectedStock]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"stockSelect\",\n      children: \"Choose a stock:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"stockSelect\",\n      value: selectedStock,\n      onChange: e => setSelectedStock(e.target.value),\n      children: Object.keys(stocks).map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: stock,\n        children: stock\n      }, stock, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chartContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        id: \"stockChart\",\n        width: \"600\",\n        height: \"400\",\n        frameborder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(StockPredictionApp, \"9g+PEx7JYEZDKJ5kF6l/NXbKzjQ=\");\n_c = StockPredictionApp;\nReactDOM.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(StockPredictionApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"StockPredictionApp\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","StockPredictionApp","_s","selectedStock","setSelectedStock","closingPrice","setClosingPrice","predictedPrice","setPredictedPrice","result","setResult","stocks","TCS","TATAMOTORS","SUNPHARMA","RELIANCE","ITC","INFY","ICICIBANK","HINDUNILVR","HDFCBANK","ADANIPOWER","closing_price","predicted_price","document","getElementById","src","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","Object","keys","map","stock","width","height","frameborder","_c","render","StrictMode","$RefreshReg$"],"sources":["/Users/sumedh/Desktop/bull/stock-prediction-app/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction StockPredictionApp() {\n  const [selectedStock, setSelectedStock] = useState('TCS');\n  const [closingPrice, setClosingPrice] = useState(null);\n  const [predictedPrice, setPredictedPrice] = useState(null);\n  const [result, setResult] = useState('');\n\n  const stocks = {\n    TCS: 'https://tradingview.com/embed/TCS_chart',\n    TATAMOTORS: 'https://tradingview.com/embed/TATAMOTORS_chart',\n    SUNPHARMA: 'https://tradingview.com/embed/SUNPHARMA_chart',\n    RELIANCE: 'https://tradingview.com/embed/RELIANCE_chart',\n    ITC: 'https://tradingview.com/embed/ITC_chart',\n    INFY: 'https://tradingview.com/embed/INFY_chart',\n    ICICIBANK: 'https://tradingview.com/embed/ICICIBANK_chart',\n    HINDUNILVR: 'https://tradingview.com/embed/HINDUNILVR_chart',\n    HDFCBANK: 'https://tradingview.com/embed/HDFCBANK_chart',\n    ADANIPOWER: 'https://tradingview.com/embed/ADANIPOWER_chart',\n  };\n\n  useEffect(() => {\n    // Simulate fetching the stock data (you'll fill these values)\n    const closing_price = 0; // Fill with actual data\n    const predicted_price = 0; // Fill with actual data\n    setClosingPrice(closing_price);\n    setPredictedPrice(predicted_price);\n\n    if (predicted_price > closing_price) {\n      setResult('The stock will be Bullish!');\n    } else {\n      setResult('The stock will be Bearish!');\n    }\n\n    // Update the chart based on selected stock\n    document.getElementById('stockChart').src = stocks[selectedStock];\n  }, [selectedStock]);\n\n  return (\n    <div>\n      <h2>Stock Prediction for {selectedStock}</h2>\n      <label htmlFor=\"stockSelect\">Choose a stock:</label>\n      <select\n        id=\"stockSelect\"\n        value={selectedStock}\n        onChange={(e) => setSelectedStock(e.target.value)}\n      >\n        {Object.keys(stocks).map((stock) => (\n          <option key={stock} value={stock}>\n            {stock}\n          </option>\n        ))}\n      </select>\n      <div id=\"chartContainer\">\n        <iframe id=\"stockChart\" width=\"600\" height=\"400\" frameborder=\"0\"></iframe>\n      </div>\n      <div id=\"result\">{result}</div>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <StockPredictionApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}